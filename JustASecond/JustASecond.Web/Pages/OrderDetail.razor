@page "/orderDetail/{OrderId:int}"
@using JustASecond.DAL.Interfaces
@using JustASecond.DAL.Repos
@using JustASecond.Web.Data.ModelViews
@using JustASecond.Web.Pages.Shared;
@inject IUnitOfWork unitOfWork

<h3>Order Detail</h3>

@if (orderPositions == null)
{
    <Spinner></Spinner>
    return;
}
else if (orderPositions.Count() < 1)
{
    <p>No order positions found.</p>
    return;
}

<table class="table table-responsive table-striped">
    <thead class="table-dark">
        <tr>
            <th>#</th>
            <th>Product</th>
            <th>Amount</th>
            <th>Price per product</th>
            <th>Total</th>
        </tr>
    </thead>
    <tbody>
        @{
            int orderPositionDisplay = 0;
            foreach (var orderPosition in orderPositions)
            {
                orderPositionDisplay++;
                <tr>
                    <td>@orderPositionDisplay</td>
                    <td>@orderPosition.Product.Title</td>
                    <td>@orderPosition.Amount</td>
                    <td>@orderPosition.Product.Price</td>
                    <td>@orderPosition.Total</td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private IEnumerable<OrderPositionView> orderPositions;

    [Parameter]
    public int OrderId { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        orderPositions = await unitOfWork.OrderRepo.GetAllPositionsFromOrder(OrderId);
    }
}
