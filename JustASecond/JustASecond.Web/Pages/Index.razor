@page "/"

<PageTitle>Index</PageTitle>

@using JustASecond.DAL.Data.ModelViews
@using JustASecond.DAL.Data.Models
@using JustASecond.DAL.Interfaces
@using JustASecond.Web.Data.ModelViews
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Components.Authorization
@using JustASecond.Web.Pages.Shared
@inject NavigationManager Navigation
@inject IUnitOfWork unitOfWork

<link rel="stylesheet" href="/css/mainstyle.css">

<AuthorizeView>
    <Authorized>
        <div class="topnav">
            <a href="#">Orders</a>
            <a href="#">Tables</a>
            <a href="#">History</a>
            <form method="post" action="Identity/Account/LogOut">
                <button type="submit" class="linkbutton">Log out</button>
            </form>
        </div>
        <hr class="divider" />

        <h3>Orders</h3>

        @if (orders == null)
        {
            <Spinner></Spinner>
            return;
        }
        else if (orders.Count() < 1)
        {
            <p>No orders found.</p>
            return;
        }

        <div>
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Date</th>
                        <th>Table</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in orders!)
                    {
                        <tr>
                            <td>@order.CreatedDate</td>
                            <td>@order.Table?.Id</td>
                            <td><button class="btn" @onclick="() => OpenOrderDetails(order.Id)">Order details</button></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <h3>Calls</h3>
        @if(waiterCalls == null)
        {
            <h4>no calls...</h4>
        }
        else
        {
            <div>
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Date</th>
                        <th>Table</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in waiterCalls!)
                    {
                        <tr>
                            <td>@item.CalledAt</td>
                            <td>@item.Table?.Id</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        }
    </Authorized>
</AuthorizeView>

@code
{
    private IEnumerable<OrderPositionView> currentOrderPositions;
    private OrderView selectedOrder;
    private IEnumerable<Order> orders;
    private IEnumerable<JustASecond.DAL.Data.Models.WaiterCall> waiterCalls;

    public static bool FirstRendered { get; set; } = true;
    public static List<Table> Tables { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var principal = HttpContextAccessor.HttpContext!.User;
        var loggedInUserId = principal.FindFirstValue(ClaimTypes.NameIdentifier);
        var user = await _userManager.FindByIdAsync(loggedInUserId);

        if (!principal.Identity!.IsAuthenticated)
        {
            Navigation.NavigateTo("loginpage");
        }

        if (FirstRendered)
        {
            FirstRendered = false;
            Tables = (await unitOfWork.OrderRepo.GetTables()).ToList();
        }

        orders = await unitOfWork.OrderRepo.GetAllSentOrders();
        waiterCalls = await unitOfWork.WaiterRepo.GetWaiterCalls();
    }

    private void OpenOrderDetails(int orderId)
    {
        Navigation.NavigateTo($"orderDetail/{orderId}");
    }
}